package pages

import (
	"go-htmx-starter/internal"
	"os"
)

func isDev() bool {
	env := os.Getenv("DEV")
	return env == "true"
}

templ hrscripts() {
	if isDev() {
		<div>
			<!-- hot reload stuff, disabled on prod -->
			<script src="/static/hr.js"></script>
			<div hx-get="/reload" hx-trigger="every 1s" hx-swap="none" hx-target="#hr">
				<input type="hidden" id="hr" value=""/>
			</div>
		</div>
	} else {
		<div>
			<!-- hr off -->
		</div>
	}
}

templ Layout(title string, bodyContent templ.Component) {
	<!DOCTYPE html>
	<html lang="en" data-theme="emerald">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<meta http-equiv="X-UA-Compatible" content="ie=edge"/>
			<title>{ title }</title>
			<link rel="icon" href="/static/favicon.svg" type="image/svg+xml"/>
			<link href="https://fonts.googleapis.com/css2?family=Inter&display=swap" rel="stylesheet"/>
			<!-- <link href="/static/styles.css" rel="stylesheet"/> -->
			if isDev() {
				<script type="module" src="http://localhost:5173/@vite/client"></script>
				<script type="module" src="http://localhost:5173/assets/js/main.js"></script>
			} else {
				<link rel="stylesheet" href="/dist/assets/main-[hash].css"/>
				<script type="module" src="/dist/js/main-[hash].js"></script>
			}
		</head>
		<body>
			@bodyContent
			@hrscripts()
		</body>
	</html>
}

templ getProductionAssets() {
	if manifest := ctx.Value("manifest").(map[string]internal.ManifestEntry); manifest != nil {
		if entry, ok := manifest["assets/js/main.js"]; ok {
			for _, css := range entry.CSS {
				<link rel="stylesheet" href={ "/dist/" + css }/>
			}
			<script type="module" src={ "/dist/" + entry.File }></script>
		}
	}
}
